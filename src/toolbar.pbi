;╔═════════════════════════════════════════════════════════════════════════════════════════════════
;║     toolbar.pbi                                                                           
;╠═════════════════════════════════════════════════════════════════════════════════════════════════
;║     Created: 05-08-2025 
;║
;║     Copyright (c) 2025 James Dooley <james@dooley.ch>
;║
;║     History:
;║     05-08-2025: Initial version
;╚═════════════════════════════════════════════════════════════════════════════════════════════════
DeclareModule ToolBarModule
  
  Declare.b CreateAppToolBar(hWindow.i) ; Creates the application's toolbar
  
  Declare.s ToolBarModuleError() ; Returns last error generated by the library

EndDeclareModule

Module ToolBarModule
  EnableExplicit
  
  UseModule AppConstants
  
  UsePNGImageDecoder()
  
  Enumeration ButtonIds 1000 
    #hButton_About
    #hButton_Quit
  EndEnumeration
  
  Define lastError$ = ""
  Define hMainWindow.i, hToolbar.i
  Define hAboutIcon.i, hExitIcon.i
  
  Procedure OnToolbarButtonClicked()
    Shared hMainWindow
    Protected toolbarItem.i = EventMenu()
    
    Select toolbarItem
      Case #hButton_Quit
        PostEvent(#APP_Event_Quit, hMainWindow, #PB_Ignore, #PB_Ignore)
      Case #hButton_About
        PostEvent(#APP_Event_About, hMainWindow, #PB_Ignore, #PB_Ignore)  
    EndSelect
  EndProcedure
  
  ;┌───────────────────────────────────────────────────────────────────────────────────────────────
  ;│     Public     
  ;└───────────────────────────────────────────────────────────────────────────────────────────────

  ; Returns last error generated by the library
  ;
  Procedure.s ToolBarModuleError()
    Shared lastError$
    ProcedureReturn lastError$
  EndProcedure
  
  ; Creates the application's toolbar
  ;
  ; Params
  ; hWindow - The ID of the application's main window
  ;
  ; Returns: True if successful otherwise False
  ;
  Procedure.b CreateAppToolBar(hWindow.i)
    Shared hMainWindow, hToolbar, lastError$
    Shared hExitIcon, hAboutIcon
    
    lastError$ = ""
    
    If IsWindow(hWindow)
      hMainWindow = hWindow
      
      #ToolbarFlags = #PB_ToolBar_Large | #PB_ToolBar_Text 
      hToolBar = CreateToolBar(#PB_Any, WindowID(hMainWindow), #ToolbarFlags)
      
      If IsToolBar(hToolbar)
        ; Load the button images
        hAboutIcon = CatchImage(#PB_Any, ?AboutButtonIcon)        
        hExitIcon = CatchImage(#PB_Any, ?ExitButtonIcon)
    
        ; Add buttons
        ToolBarImageButton(#hButton_Quit, ImageID(hExitIcon), #PB_ToolBar_Normal, "Quit")
        ToolBarSeparator()
        ToolBarImageButton(#hButton_About, ImageID(hAboutIcon), #PB_ToolBar_Normal, "About")
        
        ; Setup the toolbar button handler
        BindEvent(#PB_Event_Menu, @OnToolbarButtonClicked(), hMainWindow)
      EndIf
      
      lastError$ = "Failed to create the application toolbar"
      ProcedureReturn #False      
    EndIf
    
    lastError$ = "Invalid Window ID passed to: CreateToolBar"
    ProcedureReturn #False
  EndProcedure
  
  DataSection
    ExitButtonIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar/exit-button@24px.png"
    
    AboutButtonIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar/about-button@24px.png"
  EndDataSection
EndModule
; IDE Options = PureBasic 6.21 - C Backend (MacOS X - arm64)
; ExecutableFormat = Console
; CursorPosition = 55
; FirstLine = 20
; Folding = -
; EnableXP
; DPIAware