;╔═════════════════════════════════════════════════════════════════════════════════════════════════
;║     about_dlg.pbi                                                                           
;╠═════════════════════════════════════════════════════════════════════════════════════════════════
;║     Created: 05-08-2025 
;║
;║     Copyright (c) 2025 James Dooley <james@dooley.ch>
;║
;║     History:
;║     05-08-2025: Initial version
;╚═════════════════════════════════════════════════════════════════════════════════════════════════
DeclareModule AboutDlgModule
  
  Declare.b ShowAboutDialog(hWindow.i) ; Display the about dialog
  
  Declare.s AboutDlgModuleError() ; Returns last error generated by the library

EndDeclareModule

Module AboutDlgModule
  EnableExplicit
  
  UseModule AppConstants
  
  UsePNGImageDecoder()
  
  #Dialog_Width = 350
  #Dialog_Height = 125
  
  #Dialog_Button_Width = 100 
  #Dialog_Button_Height = 25
  
  #Dialog_Logo_X = (#CONTROL_OFFSET * 2)
  #Dialog_Logo_Y = (#CONTROL_OFFSET * 2)
  
  #Dialog_Logo_Width = 128
  #Dialog_Logo_Height = 128
  
  #Dialog_Button_X = (#Dialog_Width - #Dialog_Button_Width) / 2
  #Dialog_Button_Y = #Dialog_Height - #Dialog_Button_Height - (#CONTROL_OFFSET * 2)
   
  #Dialog_Title_X = #Dialog_Logo_X + 70
  #Dialog_Title_Width = #Dialog_Width - #Dialog_Title_X - (#CONTROL_OFFSET * 2)
  
  #Dialog_Version_Y = #Dialog_Logo_Y + #Dialog_Button_Height
  
  Define lastError$ = ""
  
  Define.i hMainWindow, hDialog
  
  ; This rountine handles the user clicking the cancel button
  ;
  Procedure OnDlgOKButtonClick()
    Shared hDialog, hMainWindow
    
    If IsWindow(hDialog)
      CloseWindow(hDialog)
    EndIf
    
    PostEvent(#App_Event_StartMainLoop, hMainWindow, #PB_Ignore, #PB_Ignore, #PB_Ignore)
  EndProcedure
  
  ;┌───────────────────────────────────────────────────────────────────────────────────────────────
  ;│     Public     
  ;└───────────────────────────────────────────────────────────────────────────────────────────────

  ; Returns last error generated by the library
  Procedure.s AboutDlgModuleError()
    Shared lastError$
    ProcedureReturn lastError$
  EndProcedure
  
  ; Display the about dialog
  Procedure.b ShowAboutDialog(hWindow.i) 
    Shared lastError$, hDialog, hMainWindow
    Protected.i hOkButton, hLogoImage
    
    lastError$ = ""
    #DialogFlags = #PB_Window_TitleBar | #PB_Window_WindowCentered
    
    If IsWindow(hWindow)
      hMainWindow = hWindow
      
      hDialog = OpenWindow(#PB_Any, #PB_Ignore, #PB_Ignore, #Dialog_Width, #Dialog_Height, "About " + #APP_Title, #DialogFlags, WindowID(hMainWindow))
      If IsWindow(hDialog)
        ; Create app logo
        hLogoImage = CatchImage(#PB_Any, ?AboutImage)
        ImageGadget(#PB_Any, #Dialog_Logo_X, #Dialog_Logo_Y, #Dialog_Logo_Width, #Dialog_Logo_Height, ImageID(hLogoImage))
        
        ; Title
        TextGadget(#PB_Any, #Dialog_Title_X, #Dialog_Logo_Y + (#CONTROL_OFFSET * 2), #Dialog_Title_Width, #Dialog_Button_Height, #APP_Title, #PB_Text_Center)
        
        ; Version
        TextGadget(#PB_Any, #Dialog_Title_X, #Dialog_Version_Y + (#CONTROL_OFFSET * 2), #Dialog_Title_Width, #Dialog_Button_Height, "Version: " + #APP_Version_Number, #PB_Text_Center)
        
        ; Create the OK button
        hOkButton = ButtonGadget(#PB_Any, #Dialog_Button_X, #Dialog_Button_Y, #Dialog_Button_Width, #Dialog_Button_Height, "OK", #PB_Button_Default) 
        BindGadgetEvent(hOkButton, @OnDlgOKButtonClick(), #PB_All)
        
        ; Stop main loop processing
        PostEvent(#APP_Event_StopMainLoop, hMainWindow, #PB_Ignore, #PB_Ignore, #PB_Ignore)
      EndIf
    EndIf
    
    lastError$ = "Invalid window ID passed to function: ShowAboutDialog"
    ProcedureReturn #False
  EndProcedure
  
  DataSection
    AboutImage:
    IncludeBinary #PB_Compiler_FilePath + "res/app/png/app-icon@128px.png"
  EndDataSection  
EndModule
; IDE Options = PureBasic 6.21 - C Backend (MacOS X - arm64)
; ExecutableFormat = Console
; CursorPosition = 27
; FirstLine = 22
; Folding = -
; EnableXP
; DPIAware